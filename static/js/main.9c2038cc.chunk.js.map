{"version":3,"sources":["Components/HeaderComps/UserName.js","Components/HeaderComps/Logo.js","Components/HeaderComps/Clock.js","Components/HeaderComps/Date.js","Components/HeaderComps/Header.js","firebase.js","Components/MainComps/InputComp.js","Components/MainComps/CheckBox.js","Components/MainComps/DelBtn.js","Components/MainComps/Task.js","Components/MainComps/Tasks.js","Components/MainComps/MainComp.js","Components/FooterComps/Footer.js","App.js","serviceWorker.js","index.js"],"names":["UserName","props","className","usrName","Logo","icon","faCheckDouble","Clock","format","ticking","timezone","Date","moment","tz","Header","state","bkground","usrChoice","url","headerImg","usr","name","dateTime","timeZone","axios","method","dataResponse","params","client_id","then","res","randIndx","Math","floor","random","data","length","randImg","urls","full","setState","prevState","Object","assign","this","heroImg","backgroundImage","style","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","InputComp","action","validation","type","id","value","onChange","change","placeholder","onClick","click","Val","CheckBox","status","DelBtn","faTrashAlt","delClick","Task","console","log","for","task","Tasks","tasksArray","tasksArr","map","key","eachTask","completed","e","MainComp","addTaskHandler","usrInput","target","charAt","toUpperCase","slice","submitTaskHandler","preventDefault","dbRef","database","ref","push","validationAlert","handleRemove","taskKey","child","remove","handleComplete","tasks","on","response","newState","val","Footer","class","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c2038cc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst UserName = (props) => {\r\n\treturn <h1 className=\"userName\">{props.usrName}</h1>;\r\n};\r\n\r\nexport default UserName;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckDouble } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"logoBox\">\r\n\t\t\t\t<FontAwesomeIcon icon={faCheckDouble} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Flow</h2>\r\n\t\t\t\t\t<p>Get shit done</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport LiveClock from 'react-live-clock';\r\n\r\nfunction Clock() {\r\n\treturn (\r\n\t\t<time className=\"clock\">\r\n\t\t\t<LiveClock format=\"hh:mm:ss\" ticking=\"true\" timezone=\"US/Pacific\" />\r\n\t\t</time>\r\n\t);\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Date = (props) => {\r\n\treturn (\r\n\t\t<time className=\"date\">{moment.tz(moment(), props.tz).format('LL')}</time>\r\n\t);\r\n};\r\n\r\nexport default Date;\r\n","import React, { Component } from 'react';\r\nimport Styles from './Header.css';\r\nimport axios from 'axios';\r\nimport UserName from './UserName.js';\r\nimport Logo from './Logo.js';\r\nimport Clock from './Clock.js';\r\nimport Date from './Date.js';\r\n\r\nclass Header extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tbkground: {\r\n\t\t\t\tusrChoice: '',\r\n\t\t\t\turl: '',\r\n\t\t\t\theaderImg: '',\r\n\t\t\t},\r\n\t\t\tusr: {\r\n\t\t\t\tname: 'John Smith',\r\n\t\t\t},\r\n\t\t\tdateTime: {\r\n\t\t\t\ttimeZone: 'US/Pacific',\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst apiKey = 'II3ASpAqNfI4gpWE2HdYIORRcGNtpm5N6UBeF2cBQQc';\r\n\t\taxios({\r\n\t\t\tmethod: 'GET',\r\n\t\t\turl: 'https://api.unsplash.com/photos',\r\n\t\t\tdataResponse: 'json',\r\n\t\t\t// Stuff that goes after the question mark, query parameters\r\n\t\t\tparams: {\r\n\t\t\t\tclient_id: apiKey,\r\n\t\t\t\tformat: 'json',\r\n\t\t\t},\r\n\t\t}).then((res) => {\r\n\t\t\t// console.log(res);\r\n\t\t\tconst randIndx = Math.floor(Math.random() * res.data.length);\r\n\t\t\tconst randImg = res.data[randIndx].urls.full;\r\n\t\t\tthis.setState(\r\n\t\t\t\t(prevState) => {\r\n\t\t\t\t\tlet bkground = Object.assign({}, prevState.bkground);\r\n\t\t\t\t\tbkground.url = randImg;\r\n\t\t\t\t\tbkground.headerImg = `linear-gradient(0deg, rgba(51,51, 51,.5), rgba(64, 115, 158,.5)), url(\r\n\t\t\t\t\t\t${randImg}\r\n\t\t\t\t\t\t)`;\r\n\t\t\t\t\treturn { bkground };\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\t// console.log('SetState: ', this.state.bkground.headerImg);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t// console.log('ComponentDidMount: ', this.state.bkground.headerImg);\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tbkground: { usrChoice, url, headerImg },\r\n\t\t\tusr: { name },\r\n\t\t} = this.state;\r\n\r\n\t\tconst heroImg = {\r\n\t\t\tbackgroundImage: headerImg,\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<header style={heroImg}>\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<div className=\"logoClockBox\">\r\n\t\t\t\t\t\t<Logo />{' '}\r\n\t\t\t\t\t\t<div className=\"dateTimeBox\">\r\n\t\t\t\t\t\t\t<Clock />\r\n\t\t\t\t\t\t\t<Date tz={this.state.dateTime.timeZone} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<UserName usrName={name} />\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: 'AIzaSyAa00XcVVgsPNI-my3GA-AgAVjTh-Zt0As',\r\n\tauthDomain: 'project-five-b1afe.firebaseapp.com',\r\n\tdatabaseURL: 'https://project-five-b1afe.firebaseio.com',\r\n\tprojectId: 'project-five-b1afe',\r\n\tstorageBucket: 'project-five-b1afe.appspot.com',\r\n\tmessagingSenderId: '653508419721',\r\n\tappId: '1:653508419721:web:768aeb69f0823e91cd2658',\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\n\r\nconst InputComp = (props) => {\r\n\treturn (\r\n\t\t<form action=\"\" className=\"form\">\r\n\t\t\t<input\r\n\t\t\t\tclassName={props.validation}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tid=\"newTask\"\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.change}\r\n\t\t\t\tplaceholder=\"Add a task here\"\r\n\t\t\t></input>\r\n\t\t\t<button type=\"submit\" onClick={props.click} Val>\r\n\t\t\t\tAdd Task\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default InputComp;\r\n","import React from 'react';\r\n\r\nconst CheckBox = (props) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\ttype=\"checkbox\"\r\n\t\t\tclassName=\"checkbox\"\r\n\t\t\tid={props.id}\r\n\t\t\tonClick={props.status}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default CheckBox;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DelBtn = (props) => {\r\n\treturn <FontAwesomeIcon icon={faTrashAlt} onClick={props.delClick} />;\r\n};\r\n\r\nexport default DelBtn;\r\n","import React from 'react';\r\nimport CheckBox from './CheckBox.js';\r\nimport DelBtn from './DelBtn.js';\r\n\r\nconst Task = (props) => {\r\n\tconsole.log(props);\r\n\tconst labelStyle = 'label';\r\n\treturn (\r\n\t\t<li className=\"task\">\r\n\t\t\t<CheckBox id={props.id} status={props.status} />\r\n\t\t\t<label className={labelStyle} for={props.id}>\r\n\t\t\t\t{props.task}\r\n\t\t\t</label>\r\n\t\t\t<DelBtn delClick={props.delClick} />\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task.js';\r\n\r\nconst Tasks = (props) => {\r\n\tconst tasksArray = props.tasksArr;\r\n\treturn (\r\n\t\t<ul className=\"tasks\">\r\n\t\t\t{tasksArray.map((task) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Task\r\n\t\t\t\t\t\tid={task.key}\r\n\t\t\t\t\t\ttask={task.eachTask.task}\r\n\t\t\t\t\t\tkey={task.key}\r\n\t\t\t\t\t\tstatus={() => {\r\n\t\t\t\t\t\t\tprops.status(task.key, task.eachTask.completed);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdelClick={(e) => {\r\n\t\t\t\t\t\t\tprops.delClick(task.key);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport Styles from './Main.css';\r\nimport InputComp from './InputComp.js';\r\nimport Tasks from './Tasks.js';\r\n\r\nclass MainComp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttasks: [],\r\n\t\t\tusrInput: '',\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Open portal to Firebase\r\n\t\tconst dbRef = firebase.database().ref('tasks');\r\n\r\n\t\t// Listen to value change\r\n\t\tdbRef.on('value', (response) => {\r\n\t\t\t// Clean up data from Firebase and store in state\r\n\t\t\tconst newState = [];\r\n\t\t\tconst data = response.val();\r\n\r\n\t\t\tfor (const key in data) {\r\n\t\t\t\t// Push task inside of temporary array\r\n\t\t\t\tnewState.push({\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\teachTask: { task: data[key], completed: false },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Update our React state for tasks\r\n\t\t\tthis.setState({\r\n\t\t\t\ttasks: newState,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\taddTaskHandler = (e) => {\r\n\t\tlet usrInput =\r\n\t\t\te.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\r\n\r\n\t\tthis.setState({\r\n\t\t\tusrInput,\r\n\t\t});\r\n\t};\r\n\r\n\t// Take user input and store in Firebase\r\n\t// Reset input field\r\n\tsubmitTaskHandler = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Open portal to Firebase\r\n\t\tconst dbRef = firebase.database().ref('tasks');\r\n\r\n\t\tif (!this.state.usrInput.length) {\r\n\t\t\tthis.setState({ validationAlert: true });\r\n\t\t} else {\r\n\t\t\t// Add new record to Firebase\r\n\t\t\tdbRef.push(this.state.usrInput);\r\n\t\t\tthis.setState({\r\n\t\t\t\tusrInput: '',\r\n\t\t\t\tcompleted: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// Get the specific task key to remove\r\n\t// Delete that specific task from Firebase\r\n\thandleRemove = (taskKey) => {\r\n\t\t// Open up Firebase portal\r\n\t\tconst dbRef = firebase.database().ref('tasks');\r\n\r\n\t\t// Delete the task based on bookKey\r\n\t\tdbRef.child(taskKey).remove();\r\n\t};\r\n\r\n\thandleComplete = (taskKey, status) => {\r\n\t\t// Open up Firebase portal\r\n\t\t// const dbRef = firebase.database().ref('tasks');\r\n\t\t// let updateObject = { completed: !status };\r\n\t\t// // Update task complete property\r\n\t\t// dbRef.child(taskKey).update(updateObject);\r\n\t};\r\n\r\n\trender() {\r\n\t\t// console.log(this.state.tasks);\r\n\t\treturn (\r\n\t\t\t<main>\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<InputComp\r\n\t\t\t\t\t\t\tvalue={this.state.usrInput}\r\n\t\t\t\t\t\t\tchange={this.addTaskHandler}\r\n\t\t\t\t\t\t\tclick={this.submitTaskHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Tasks\r\n\t\t\t\t\t\t\ttasksArr={this.state.tasks}\r\n\t\t\t\t\t\t\tdelClick={this.handleRemove}\r\n\t\t\t\t\t\t\tstatus={this.handleComplete}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MainComp;\r\n","import React from 'react';\r\nimport Styles from './Footer.css';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<div class=\"footer-bottom\">\r\n\t\t\t\t<a href=\"https://junocollege.com/\" class=\"copyright\">\r\n\t\t\t\t\tCREATED AT JUNO COLLEGE\r\n\t\t\t\t</a>\r\n\t\t\t\t<p className=\"footerBottom\">Copyright &copy; 2020 Juno College</p>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport Header from './Components/HeaderComps/Header.js';\nimport MainComp from './Components/MainComps/MainComp.js';\nimport Footer from './Components/FooterComps/Footer.js';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* Header component */}\n\t\t\t\t<Header />\n\t\t\t\t{/* Main component */}\n\t\t\t\t<MainComp />\n\t\t\t\t{/* Footer component */}\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}