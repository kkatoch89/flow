{"version":3,"sources":["Components/HeaderComps/Logo.js","Components/OnLoadComps/OnLoad.js","Components/HeaderComps/UserName.js","Components/HeaderComps/Clock.js","Components/HeaderComps/Date.js","Components/HeaderComps/Header.js","firebase.js","Components/MainComps/InputComp.js","Components/MainComps/CheckBox.js","Components/MainComps/DelBtn.js","Components/MainComps/Task.js","Components/MainComps/Tasks.js","Components/MainComps/MainComp.js","Components/FooterComps/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Logo","props","className","styling","icon","faCheckDouble","OnLoad","loadAnimation","loaded","UserName","Clock","format","ticking","timezone","tz","Date","moment","Header","state","bkground","usrChoice","url","headerImg","usr","name","dateTime","timeZone","axios","method","dataResponse","params","client_id","then","res","randIndx","Math","floor","random","data","length","randImg","urls","full","setState","prevState","Object","assign","this","heroImg","backgroundImage","style","usrName","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","InputComp","action","validation","type","id","value","onChange","change","placeholder","onClick","click","Val","CheckBox","statusCheck","defaultChecked","status","DelBtn","faTrashAlt","delClick","alt","class","Task","labelStyle","taskBoxStyle","for","task","Tasks","tasksArray","tasksArr","map","key","eachTask","complete","e","MainComp","addTaskHandler","usrInput","target","charAt","toUpperCase","slice","submitTaskHandler","preventDefault","dbRef","database","ref","newTask","push","validationAlert","handleRemove","taskKey","child","remove","handleComplete","statusUpdate","update","tasks","referenceDate","console","log","on","response","newState","val","now","Footer","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e1f9c83b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckDouble } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Logo = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={props.styling}>\r\n\t\t\t\t<FontAwesomeIcon icon={faCheckDouble} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Flow</h2>\r\n\t\t\t\t\t<p>Get shit done</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from 'react';\r\nimport Logo from '../HeaderComps/Logo.js';\r\nimport './OnLoad.css';\r\n\r\n// Creating effect on page load\r\n// Connected to Header component (props from Header comp)\r\n// Once Header component successfully completes API call and setState-\r\n// 2nd param of setState is function that initiates fade-away animation\r\nconst OnLoad = (props) => {\r\n\tlet loadAnimation = 'onLoad';\r\n\tif (props.loaded) {\r\n\t\tloadAnimation = 'onLoad fadeOut';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={loadAnimation}>\r\n\t\t\t<Logo styling=\"onLoadLogoBox\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default OnLoad;\r\n","import React from 'react';\r\n\r\nconst UserName = (props) => {\r\n\treturn <h1 className=\"userName\">Karan's planner</h1>;\r\n};\r\n\r\nexport default UserName;\r\n","import React from 'react';\r\nimport LiveClock from 'react-live-clock';\r\n\r\n// Clock functional component using react-live-clock library\r\n// Display live time based on timezone prop passed by Header class component\r\nfunction Clock(props) {\r\n\treturn (\r\n\t\t<time className=\"clock\">\r\n\t\t\t<LiveClock format=\"hh:mm:ss\" ticking=\"true\" timezone={props.tz} />\r\n\t\t</time>\r\n\t);\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\n// Date functional component using react-moment library\r\n// Display live date\r\nconst Date = (props) => {\r\n\treturn (\r\n\t\t<time className=\"date\">{moment.tz(moment(), props.tz).format('LL')}</time>\r\n\t);\r\n};\r\n\r\nexport default Date;\r\n","import React, { Component } from 'react';\r\nimport Styles from './Header.css';\r\nimport axios from 'axios';\r\nimport UserName from './UserName.js';\r\nimport Logo from './Logo.js';\r\nimport Clock from './Clock.js';\r\nimport Date from './Date.js';\r\nimport OnLoad from '../OnLoadComps/OnLoad.js';\r\n\r\nclass Header extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tbkground: {\r\n\t\t\t\tusrChoice: '',\r\n\t\t\t\turl: '',\r\n\t\t\t\theaderImg: '',\r\n\t\t\t},\r\n\t\t\tusr: {\r\n\t\t\t\tname: '',\r\n\t\t\t},\r\n\t\t\tdateTime: {\r\n\t\t\t\ttimeZone: 'America/New_York',\r\n\t\t\t},\r\n\t\t\tloaded: false,\r\n\t\t};\r\n\t}\r\n\r\n\t// Unsplash Api call for random images for header background\r\n\tcomponentDidMount() {\r\n\t\tconst apiKey = 'II3ASpAqNfI4gpWE2HdYIORRcGNtpm5N6UBeF2cBQQc';\r\n\t\taxios({\r\n\t\t\tmethod: 'GET',\r\n\t\t\turl: 'https://api.unsplash.com/photos',\r\n\t\t\tdataResponse: 'json',\r\n\t\t\tparams: {\r\n\t\t\t\tclient_id: apiKey,\r\n\t\t\t\tformat: 'json',\r\n\t\t\t},\r\n\t\t}).then((res) => {\r\n\t\t\tconst randIndx = Math.floor(Math.random() * res.data.length);\r\n\t\t\tconst randImg = res.data[randIndx].urls.full;\r\n\t\t\tthis.setState((prevState) => {\r\n\t\t\t\tlet bkground = Object.assign({}, prevState.bkground);\r\n\t\t\t\tbkground.url = randImg;\r\n\t\t\t\tbkground.headerImg = `linear-gradient(0deg, rgba(51,51, 51,.6), rgba(64, 115, 158,.6)), url(\r\n\t\t\t\t\t\t${randImg}\r\n\t\t\t\t\t\t)`;\r\n\t\t\t\t// Return header image url, styling string and loaded state which is trigger-\r\n\t\t\t\t// for onload component animation to fire\r\n\t\t\t\treturn { bkground, loaded: true };\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tbkground: { usrChoice, url, headerImg },\r\n\t\t\tusr: { name },\r\n\t\t} = this.state;\r\n\r\n\t\tconst heroImg = {\r\n\t\t\tbackgroundImage: headerImg,\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<header style={heroImg}>\r\n\t\t\t\t{/* OnLoad effect/animation */}\r\n\t\t\t\t<OnLoad loaded={this.state.loaded} />\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<div className=\"logoClockBox\">\r\n\t\t\t\t\t\t{/* Logo */}\r\n\t\t\t\t\t\t<Logo styling=\"headerLogoBox\" />{' '}\r\n\t\t\t\t\t\t<div className=\"dateTimeBox\">\r\n\t\t\t\t\t\t\t{/* Live clock */}\r\n\t\t\t\t\t\t\t<Clock tz={this.state.dateTime.timeZone} />\r\n\t\t\t\t\t\t\t{/* Live date */}\r\n\t\t\t\t\t\t\t<Date tz={this.state.dateTime.timeZone} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* User name/h1 element */}\r\n\t\t\t\t\t<UserName usrName={name} />\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: 'AIzaSyAa00XcVVgsPNI-my3GA-AgAVjTh-Zt0As',\r\n\tauthDomain: 'project-five-b1afe.firebaseapp.com',\r\n\tdatabaseURL: 'https://project-five-b1afe.firebaseio.com',\r\n\tprojectId: 'project-five-b1afe',\r\n\tstorageBucket: 'project-five-b1afe.appspot.com',\r\n\tmessagingSenderId: '653508419721',\r\n\tappId: '1:653508419721:web:768aeb69f0823e91cd2658',\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\n\r\n// Create form element for user to type in tasks and submit via button\r\nconst InputComp = (props) => {\r\n\treturn (\r\n\t\t<form action=\"\" className=\"form\">\r\n\t\t\t<input\r\n\t\t\t\tclassName={props.validation}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tid=\"newTask\"\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.change}\r\n\t\t\t\tplaceholder=\"Enter task here\"\r\n\t\t\t></input>\r\n\t\t\t<button type=\"submit\" onClick={props.click} Val>\r\n\t\t\t\tAdd Task\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default InputComp;\r\n","import React from 'react';\r\n\r\n// Checkbox rendered with each added task\r\n// Used to mark a task as complete\r\nconst CheckBox = (props) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\ttype=\"checkbox\"\r\n\t\t\tclassName=\"checkbox\"\r\n\t\t\tid={props.id}\r\n\t\t\tonClick={props.statusCheck}\r\n\t\t\tdefaultChecked={props.status}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default CheckBox;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Checkbox rendered with each added task\r\n// Used to delete respective task from list\r\nconst DelBtn = (props) => {\r\n\treturn (\r\n\t\t<button className=\"delButton\">\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon={faTrashAlt}\r\n\t\t\t\tonClick={props.delClick}\r\n\t\t\t\tclassName=\"trashIcon\"\r\n\t\t\t\talt\r\n\t\t\t/>\r\n\t\t\t<span class=\"nonVisual\">Delete</span>\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default DelBtn;\r\n","import React from 'react';\r\nimport CheckBox from './CheckBox.js';\r\nimport DelBtn from './DelBtn.js';\r\n\r\n// Each task list item\r\n// Contains submitted task from form, checkbox and delete button\r\nconst Task = (props) => {\r\n\tlet labelStyle = 'label';\r\n\tlet taskBoxStyle = 'task';\r\n\tif (props.status) {\r\n\t\tlabelStyle = 'label taskComplete';\r\n\t\ttaskBoxStyle = 'task taskCompleteBox';\r\n\t}\r\n\treturn (\r\n\t\t<li className={taskBoxStyle}>\r\n\t\t\t<CheckBox\r\n\t\t\t\tid={props.id}\r\n\t\t\t\tstatusCheck={props.statusCheck}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t/>\r\n\t\t\t<label className={labelStyle} for={props.id}>\r\n\t\t\t\t{props.task}\r\n\t\t\t</label>\r\n\t\t\t<DelBtn delClick={props.delClick} />\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task.js';\r\nimport './Main.css';\r\n\r\n// Array of task objects from status passed here\r\n// Array is mapped and props are passed down to Task functional component-\r\n// containing each unique task's props\r\n// Also passing handler methods from class component as props for each task\r\nconst Tasks = (props) => {\r\n\tconst tasksArray = props.tasksArr;\r\n\treturn (\r\n\t\t<ul className=\"tasks\">\r\n\t\t\t{tasksArray.map((task) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Task\r\n\t\t\t\t\t\tid={task.key}\r\n\t\t\t\t\t\ttask={task.eachTask}\r\n\t\t\t\t\t\tstatus={task.complete}\r\n\t\t\t\t\t\tstatusCheck={(e) => {\r\n\t\t\t\t\t\t\tprops.status(task.key, task.complete);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={task.key}\r\n\t\t\t\t\t\tdelClick={(e) => {\r\n\t\t\t\t\t\t\tprops.delClick(task.key);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport InputComp from './InputComp.js';\r\nimport Tasks from './Tasks.js';\r\nimport moment from 'moment';\r\n\r\nclass MainComp extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttasks: [],\r\n\t\t\tusrInput: '',\r\n\t\t\treferenceDate: 'October 1, 2020',\r\n\t\t};\r\n\t}\r\n\r\n\t// Link with Firebase to store and manage tasks\r\n\tcomponentDidMount() {\r\n\t\t// Open portal to Firebase\r\n\t\tconst dbRef = firebase.database().ref('/tasks');\r\n\r\n\t\tconst presentDate = moment.tz(moment(), 'America/New_York').format('LL');\r\n\r\n\t\t// if (this.state.referenceDate !== presentDate) {\r\n\t\t// \tdbRef\r\n\t\t// }\r\n\r\n\t\t// console.log(dbRef.orderByChild('complete').equalTo(true));\r\n\t\tconsole.log(dbRef);\r\n\r\n\t\tfor (const key in dbRef) {\r\n\t\t\tconsole.log(dbRef[key]);\r\n\t\t}\r\n\r\n\t\t// Listen to value change\r\n\t\tdbRef.on('value', (response) => {\r\n\t\t\t// Clean up data from Firebase and store in state\r\n\t\t\tconst newState = [];\r\n\t\t\tconst data = response.val();\r\n\r\n\t\t\tfor (const key in data) {\r\n\t\t\t\t// Push task inside of temporary array\r\n\t\t\t\tnewState.push({\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\teachTask: data[key].task,\r\n\t\t\t\t\tcomplete: data[key].complete,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Update our React state for tasks\r\n\t\t\tthis.setState({\r\n\t\t\t\ttasks: newState,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst now = Date.now();\r\n\t\tconst cutOff = now - 30 * 1000;\r\n\t\tconst old = dbRef;\r\n\t}\r\n\r\n\t// Method for onChange listener on input element\r\n\taddTaskHandler = (e) => {\r\n\t\t// Capitalize first letter of all strings typed\r\n\t\tlet usrInput =\r\n\t\t\te.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\r\n\r\n\t\tthis.setState({\r\n\t\t\tusrInput,\r\n\t\t});\r\n\t};\r\n\r\n\t// Take user input and store in Firebase\r\n\t// Reset input field\r\n\tsubmitTaskHandler = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Open portal to Firebase\r\n\t\tconst dbRef = firebase.database().ref('tasks');\r\n\r\n\t\t// Creating task obj\r\n\t\tconst newTask = {\r\n\t\t\ttask: this.state.usrInput,\r\n\t\t\tcomplete: false,\r\n\t\t};\r\n\r\n\t\tif (!this.state.usrInput.length) {\r\n\t\t\tthis.setState({ validationAlert: true });\r\n\t\t} else {\r\n\t\t\t// Add new record to Firebase\r\n\t\t\tdbRef.push(newTask);\r\n\t\t\tthis.setState({\r\n\t\t\t\tusrInput: '',\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// Get the specific task key to remove\r\n\t// Delete that specific task from Firebase\r\n\thandleRemove = (taskKey) => {\r\n\t\t// Open up Firebase portal\r\n\t\tconst dbRef = firebase.database().ref('tasks');\r\n\r\n\t\t// Delete the task based on bookKey\r\n\t\tdbRef.child(taskKey).remove();\r\n\t};\r\n\r\n\thandleComplete = (taskKey, status) => {\r\n\t\t// Open up Firebase portal\r\n\t\tconst dbRef = firebase.database().ref('tasks');\r\n\r\n\t\t// Update status of complete to !complete\r\n\t\tconst statusUpdate = {\r\n\t\t\tcomplete: !status,\r\n\t\t};\r\n\r\n\t\t// Update status (!complete) in Firebase\r\n\t\tdbRef.child(taskKey).update(statusUpdate);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { tasks, usrInput } = this.state;\r\n\t\treturn (\r\n\t\t\t<main>\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t{/* Form with input and button */}\r\n\t\t\t\t\t\t<InputComp\r\n\t\t\t\t\t\t\tvalue={usrInput}\r\n\t\t\t\t\t\t\tchange={this.addTaskHandler}\r\n\t\t\t\t\t\t\tclick={this.submitTaskHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* Task list */}\r\n\t\t\t\t\t\t<Tasks\r\n\t\t\t\t\t\t\ttasksArr={tasks}\r\n\t\t\t\t\t\t\tdelClick={this.handleRemove}\r\n\t\t\t\t\t\t\tstatus={this.handleComplete}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MainComp;\r\n","import React from 'react';\r\nimport Styles from './Footer.css';\r\n\r\n// Footer functional component for 'Created at Juno' message\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<div class=\"footer-bottom\">\r\n\t\t\t\t<a href=\"https://junocollege.com/\" class=\"copyright\">\r\n\t\t\t\t\tCREATED AT JUNO COLLEGE\r\n\t\t\t\t</a>\r\n\t\t\t\t<p className=\"footerBottom\">Copyright &copy; 2020 Juno College</p>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport OnLoad from './Components/OnLoadComps/OnLoad.js';\nimport Header from './Components/HeaderComps/Header.js';\nimport MainComp from './Components/MainComps/MainComp.js';\nimport Footer from './Components/FooterComps/Footer.js';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* Header component */}\n\t\t\t\t<Header />\n\t\t\t\t{/* Main component */}\n\t\t\t\t<MainComp />\n\t\t\t\t{/* Footer component */}\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}